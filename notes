Steps for myself
1. decide on models and their relationships
    -make model and migration files
    -add the relationship code (mas_many, etc)

2. make routes and controllers
    -have a home page

3. implement signing up and logging in
    -have signup and login pages, plus logout
    -add validations for users, and display errors
    -add secure password 
    -add third party login, probably omniauth

4. implement creating decks with cards
    -is able to make a deck without any cards
    -is able to make a card in console
    -is able to make cards when making a deck through a nested form
    -able to Create, Read, Update, and destroy decks along with cards at the same time
    -add validations for deck and card model, and display errors

5. implement how a user would interact with decks
    -have an "index" page where a user can select certain decks or choose the order

?. implement tournaments

?. implement admin features

?. Refactor, make it DRY

Models as of now

User
user_name:string
password_digest:string

has_many :user_deck
has_many :decks, through: :user_deck
---------------------------------------
User_deck
belongs_to :user
belongs_to :deck
---------------------------------------
Deck (website revolves around decks since the site lets users share decks and report tournaments) (nested model to create cards)
	title:string
	player_name:string (hidden to user but visible to admin because in person tournaments use irl names and most users won't use irl name)

has_many :user_deck
has_many :users, through: :user_deck
has many :tournament_deck
has_many :tournaments, through: :tournament_deck
has_many :cards
----------------------------------------
Tournament_deck
belongs_to :tournament
belongs_to :deck
----------------------------------------
Tournament (list of decks and event info) (nested model for admin, make decks when making tournaments)
	event_name:string
	event_date:datetime
	description:string (maybe?)

has_many :tournament_deck
has_many :decks, through: :tournament_deck
-----------------------------------------
Card (what makes the deck) (created by deck)
	name:string (could have set)
	count:integer (decks can only have 60 cards)
	basic_energy:boolean (you can only play up to 4 of the same card unless it's basic energy)

belongs_to :deck
-------------------------------------------
Admin (creates tournaments and moderates)
name:string
email:string
password_digest:string

Player model?